// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated />

using System;
using System.ComponentModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Microsoft.TypeSpec.ProviderHub.Controller;

namespace Microsoft.MyResourceProvider.Service.Models
{
    /// <summary>
    /// Helper for merging canonical MoTestRPProperties models as part of a PUT or PATCH operation
    /// </summary>
    public partial class MoTestRPPropertiesCopyHelper
    {
        /// <summary>
        /// Extensibility point: perform actions before data is copied
        /// </summary>
        /// <param name="source">The source MoTestRPProperties</param>
        /// <param name="target">The target MoTestRPProperties</param>
        partial void OnBeginCopyForPatch(MoTestRPProperties source, MoTestRPProperties target);

        /// <summary>
        /// Extensibility point: perform actions after data is copied
        /// </summary>
        /// <param name="source">The source MoTestRPProperties</param>
        /// <param name="target">The target MoTestRPProperties</param>
        partial void OnEndCopyForPatch(MoTestRPProperties source, MoTestRPProperties target);

        /// <summary>
        /// Copy the properties of a source MoTestRPProperties to a target MoTestRPProperties, using PATCH semantics
        /// </summary>
        /// <param name="source">The source MoTestRPProperties</param>
        /// <param name="target">The target MoTestRPProperties</param>
        public void CopyForPatch(MoTestRPProperties source, MoTestRPProperties target)
        {
            var serialization = source.SerializationInfo;
            OnBeginCopyForPatch(source, target);
            if (serialization.IsSerializedProperty(nameof(source.ProvisioningState)))
                target.ProvisioningState = source.ProvisioningState;
            OnEndCopyForPatch(source, target);
        }

        /// <summary>
        /// Extensibility point: perform actions before data is copied
        /// </summary>
        /// <param name="source">The source MoTestRPProperties</param>
        /// <param name="target">The target MoTestRPProperties</param>
        partial void OnBeginCopyForPut(MoTestRPProperties source, MoTestRPProperties target);

        /// <summary>
        /// Extensibility point: perform actions after data is copied
        /// </summary>
        /// <param name="source">The source MoTestRPProperties</param>
        /// <param name="target">The target MoTestRPProperties</param>
        partial void OnEndCopyForPut(MoTestRPProperties source, MoTestRPProperties target);

        /// <summary>
        /// Copy the properties of a source MoTestRPProperties to a target MoTestRPProperties, using PUT semantics
        /// </summary>
        /// <param name="source">The source MoTestRPProperties</param>
        /// <param name="target">The target MoTestRPProperties</param>
        public void CopyForPut(MoTestRPProperties source, MoTestRPProperties target)
        {
            var serialization = source.SerializationInfo;
            OnBeginCopyForPut(source, target);
            target.ProvisioningState = source.ProvisioningState;
            OnEndCopyForPut(source, target);
        }
    }
}
