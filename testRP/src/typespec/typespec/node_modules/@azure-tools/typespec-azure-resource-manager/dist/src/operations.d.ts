import { DecoratorContext, Model, Operation, Program } from "@typespec/compiler";
import { HttpOperation } from "@typespec/http";
export type ArmLifecycleOperationKind = "read" | "createOrUpdate" | "update" | "delete";
export type ArmOperationKind = ArmLifecycleOperationKind | "list" | "action";
export interface ArmResourceOperation extends ArmResourceOperationData {
    path: string;
    httpOperation: HttpOperation;
}
export interface ArmLifecycleOperations {
    read?: ArmResourceOperation;
    createOrUpdate?: ArmResourceOperation;
    update?: ArmResourceOperation;
    delete?: ArmResourceOperation;
}
export interface ArmResourceOperations {
    lifecycle: ArmLifecycleOperations;
    lists: {
        [key: string]: ArmResourceOperation;
    };
    actions: {
        [key: string]: ArmResourceOperation;
    };
}
interface ArmResourceOperationData {
    name: string;
    kind: ArmOperationKind;
    operation: Operation;
    operationGroup: string;
}
export declare function resolveResourceOperations(program: Program, resourceType: Model): ArmResourceOperations;
export declare function $armResourceRead(context: DecoratorContext, target: Operation, resourceType: Model): void;
export declare function $armResourceCreateOrUpdate(context: DecoratorContext, target: Operation, resourceType: Model): void;
export declare function $armResourceUpdate(context: DecoratorContext, target: Operation, resourceType: Model): void;
export declare function $armResourceDelete(context: DecoratorContext, target: Operation, resourceType: Model): void;
export declare function $armResourceList(context: DecoratorContext, target: Operation, resourceType: Model): void;
export declare function $armRenameListByOperation(context: DecoratorContext, entity: Operation, resourceType: Model, parentTypeName?: string, parentFriendlyTypeName?: string): void;
export declare function $armResourceAction(context: DecoratorContext, target: Operation, resourceType: Model): void;
export declare function $armResourceCollectionAction(context: DecoratorContext, target: Operation): void;
export declare function isArmCollectionAction(program: Program, target: Operation): boolean;
export {};
//# sourceMappingURL=operations.d.ts.map