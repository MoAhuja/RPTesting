// <auto-generated />

namespace {{nameSpace}}.Service.Controllers
{
    public static class {{serviceName}}ServiceRoutes
    {
        public const string Namespace = "{{nameSpace}}";

{{#if includeOperationController}}
        public const string ListOperations = "providers/{{nameSpace}}/operations";
{{/if}}
{{#each resources as |resource index |}}
        public const string {{resource.name}}Item = "{{resource.itemPath}}";
{{#if resource.hasSubscriptionList}}
        public const string {{resource.name}}ListBySubscription = "/subscriptions/{subscriptionId}/providers/{{resource.nameSpace}}/{{resource.serializedName}}";
{{/if}}
{{#if resource.hasResourceGroupList}}
        public const string {{resource.name}}ListByResourceGroup = "/subscriptions/{subscriptionId}/resourceGroups{resourceGroupName}/providers/{{resource.nameSpace}}/{{resource.serializedName}}";
{{/if}}
{{#each resource.operations as | operation opIndex |}}
{{#if (eqi operation.verb "PUT")}}
        public const string {{resource.name}}ValidateCreate = "{{resource.itemPath}}/validateCreate";
{{/if}}
{{#if (eqi operation.verb "PATCH")}}
        public const string {{resource.name}}ValidatePatch = "{{resource.itemPath}}/validatePatch";
{{/if}}
{{#if (eqi operation.verb "DELETE")}}
        public const string {{resource.name}}ValidateDelete = "{{resource.itemPath}}/validateDelete";
{{/if}}
{{#if (eqi operation.verb "POST")}}
        public const string {{resource.name}}Validate{{operation.name}} = "{{resource.itemPath}}/validate{{initialCaps operation.subPath}}";
        public const string {{resource.name}}Item{{operation.name}} = "{{resource.itemPath}}/{{operation.subPath}}";
{{/if}}
{{/each}}
{{/each}}
    }
}
