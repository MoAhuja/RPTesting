// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated />

namespace {{nameSpace}}.Service.Controllers
{
    public static class {{serviceName}}ServiceRoutes
    {
        public const string Namespace = "{{nameSpace}}";

{{#if includeOperationController}}
        public const string ListOperations = "providers/{{nameSpace}}/operations";
{{/if}}
{{#each resources as |resource index |}}
        public const string {{resource.name}}Item = "{{resource.itemPath}}";
{{#each resource.operations as | operation opIndex |}}
{{#if (eqi operation.verb "PUT")}}
        public const string {{resource.name}}ValidateCreate = "{{resource.itemPath}}/resourceCreationValidate";
        public const string {{resource.name}}EndCreate = "{{resource.itemPath}}/resourceCreationCompleted";
{{/if}}
{{#if (eqi operation.verb "GET")}}
        public const string {{resource.name}}ValidateRead = "{{resource.itemPath}}/resourceReadValidate";
        public const string {{resource.name}}BeginRead = "{{resource.itemPath}}/resourceReadBegin";
{{/if}}
{{#if (eqi operation.verb "PATCH")}}
        public const string {{resource.name}}ValidatePatch = "{{resource.itemPath}}/resourcePatchValidate";
        public const string {{resource.name}}EndPatch = "{{resource.itemPath}}/resourcePatchCompleted";
{{/if}}
{{#if (eqi operation.verb "DELETE")}}
        public const string {{resource.name}}ValidateDelete = "{{resource.itemPath}}/resourceDeletionValidate";
        public const string {{resource.name}}EndDelete = "{{resource.itemPath}}/resourceDeletionCompleted";
{{/if}}
{{#if (eqi operation.verb "POST")}}
        public const string {{resource.name}}Item{{operation.name}} = "{{resource.itemPath}}/{{operation.subPath}}";
{{/if}}
{{/each}}
{{#if (and resource.resourceTypePath includeSubscriptionLifeCycleController) }}
        public const string {{resource.name}}SubscriptionLifeCycleNotification = "{{resource.resourceTypePath}}/subscriptionLifeCycleNotification";
{{/if}}
{{/each}}
    }
}
