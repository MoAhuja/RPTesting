import { EmitContext } from "@typespec/compiler";
import { AutorestEmitterOptions } from "./lib.js";
import { OpenAPI2Document } from "./types.js";
export declare function $onEmit(context: EmitContext<AutorestEmitterOptions>): Promise<void>;
export interface ResolvedAutorestEmitterOptions {
    outputDir: string;
    outputFile: string;
    examplesDirectory?: string;
    version?: string;
    azureResourceProviderFolder?: string;
    /**
     * Set the newline character for emitting files.
     * @default lf
     */
    newLine?: "crlf" | "lf";
    /**
     * Omit unreachable types.
     * By default all types declared under the service namespace will be included. With this flag on only types references in an operation will be emitted.
     */
    omitUnreachableTypes?: boolean;
    /**
     * If the x-typespec-name extension should be included
     */
    includeXTypeSpecName: "inline-only" | "never";
    /**
     * Arm types dir
     */
    armTypesDir: string;
    /**
     * readOnly property schema behavior
     */
    useReadOnlyStatusSchema?: boolean;
}
export declare function sortOpenAPIDocument(doc: OpenAPI2Document): OpenAPI2Document;
//# sourceMappingURL=openapi.d.ts.map