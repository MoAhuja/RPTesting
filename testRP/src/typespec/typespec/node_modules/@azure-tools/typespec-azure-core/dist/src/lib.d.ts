export declare const $lib: import("@typespec/compiler").TypeSpecLibrary<{
    "lro-status-union-non-string": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-property-invalid-type": {
        default: string;
    };
    "lro-status-missing": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-monitor-invalid-result-property": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "bad-record-type": {
        extendUnknown: import("@typespec/compiler").CallableMessage<[string, string, string, string]>;
        recordWithProperties: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "request-parameter-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "response-property-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "operation-link-parameter-invalid": {
        default: string;
    };
    "operation-link-parameter-invalid-target": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-resource-type": {
        missingKey: import("@typespec/compiler").CallableMessage<[string]>;
        missingSegment: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "polling-operation-return-model": {
        default: string;
    };
    "polling-operation-no-status-monitor": {
        default: string;
    };
    "polling-operation-no-lro-success": {
        default: string;
    };
    "polling-operation-no-lro-failure": {
        default: string;
    };
    "polling-operation-no-ref-or-link": {
        default: string;
    };
    "invalid-final-operation": {
        default: string;
    };
    "invalid-trait-property-count": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-trait-property-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "invalid-trait-context": {
        default: string;
    };
    "trait-property-without-location": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "client-request-id-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "repeatable-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "conditional-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "expected-trait-diagnostic-missing": {
        default: string;
    };
    "invalid-parameter": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-success-response": {
        default: string;
    };
    "lro-polling-data-missing-from-operation-response": {
        default: string;
    };
    "no-object": {
        default: string;
    };
    "verb-conflict": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "rpc-operation-needs-route": {
        default: string;
    };
    "union-enums-multiple-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-invalid-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-circular": {
        default: string;
    };
}, Record<string, any>, never>;
export declare const reportDiagnostic: <C extends "lro-status-union-non-string" | "lro-status-property-invalid-type" | "lro-status-missing" | "lro-status-monitor-invalid-result-property" | "bad-record-type" | "request-parameter-invalid" | "response-property-invalid" | "operation-link-parameter-invalid" | "operation-link-parameter-invalid-target" | "invalid-resource-type" | "polling-operation-return-model" | "polling-operation-no-status-monitor" | "polling-operation-no-lro-success" | "polling-operation-no-lro-failure" | "polling-operation-no-ref-or-link" | "invalid-final-operation" | "invalid-trait-property-count" | "invalid-trait-property-type" | "invalid-trait-context" | "trait-property-without-location" | "expected-trait-missing" | "client-request-id-trait-missing" | "repeatable-requests-trait-missing" | "conditional-requests-trait-missing" | "expected-trait-diagnostic-missing" | "invalid-parameter" | "expected-success-response" | "lro-polling-data-missing-from-operation-response" | "no-object" | "verb-conflict" | "rpc-operation-needs-route" | "union-enums-multiple-kind" | "union-enums-invalid-kind" | "union-enums-circular", M extends keyof {
    "lro-status-union-non-string": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-property-invalid-type": {
        default: string;
    };
    "lro-status-missing": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-monitor-invalid-result-property": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "bad-record-type": {
        extendUnknown: import("@typespec/compiler").CallableMessage<[string, string, string, string]>;
        recordWithProperties: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "request-parameter-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "response-property-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "operation-link-parameter-invalid": {
        default: string;
    };
    "operation-link-parameter-invalid-target": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-resource-type": {
        missingKey: import("@typespec/compiler").CallableMessage<[string]>;
        missingSegment: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "polling-operation-return-model": {
        default: string;
    };
    "polling-operation-no-status-monitor": {
        default: string;
    };
    "polling-operation-no-lro-success": {
        default: string;
    };
    "polling-operation-no-lro-failure": {
        default: string;
    };
    "polling-operation-no-ref-or-link": {
        default: string;
    };
    "invalid-final-operation": {
        default: string;
    };
    "invalid-trait-property-count": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-trait-property-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "invalid-trait-context": {
        default: string;
    };
    "trait-property-without-location": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "client-request-id-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "repeatable-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "conditional-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "expected-trait-diagnostic-missing": {
        default: string;
    };
    "invalid-parameter": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-success-response": {
        default: string;
    };
    "lro-polling-data-missing-from-operation-response": {
        default: string;
    };
    "no-object": {
        default: string;
    };
    "verb-conflict": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "rpc-operation-needs-route": {
        default: string;
    };
    "union-enums-multiple-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-invalid-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-circular": {
        default: string;
    };
}[C]>(program: import("@typespec/compiler").Program, diag: import("@typespec/compiler").DiagnosticReport<{
    "lro-status-union-non-string": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-property-invalid-type": {
        default: string;
    };
    "lro-status-missing": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-monitor-invalid-result-property": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "bad-record-type": {
        extendUnknown: import("@typespec/compiler").CallableMessage<[string, string, string, string]>;
        recordWithProperties: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "request-parameter-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "response-property-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "operation-link-parameter-invalid": {
        default: string;
    };
    "operation-link-parameter-invalid-target": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-resource-type": {
        missingKey: import("@typespec/compiler").CallableMessage<[string]>;
        missingSegment: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "polling-operation-return-model": {
        default: string;
    };
    "polling-operation-no-status-monitor": {
        default: string;
    };
    "polling-operation-no-lro-success": {
        default: string;
    };
    "polling-operation-no-lro-failure": {
        default: string;
    };
    "polling-operation-no-ref-or-link": {
        default: string;
    };
    "invalid-final-operation": {
        default: string;
    };
    "invalid-trait-property-count": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-trait-property-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "invalid-trait-context": {
        default: string;
    };
    "trait-property-without-location": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "client-request-id-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "repeatable-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "conditional-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "expected-trait-diagnostic-missing": {
        default: string;
    };
    "invalid-parameter": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-success-response": {
        default: string;
    };
    "lro-polling-data-missing-from-operation-response": {
        default: string;
    };
    "no-object": {
        default: string;
    };
    "verb-conflict": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "rpc-operation-needs-route": {
        default: string;
    };
    "union-enums-multiple-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-invalid-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-circular": {
        default: string;
    };
}, C, M>) => void, createDiagnostic: <C extends "lro-status-union-non-string" | "lro-status-property-invalid-type" | "lro-status-missing" | "lro-status-monitor-invalid-result-property" | "bad-record-type" | "request-parameter-invalid" | "response-property-invalid" | "operation-link-parameter-invalid" | "operation-link-parameter-invalid-target" | "invalid-resource-type" | "polling-operation-return-model" | "polling-operation-no-status-monitor" | "polling-operation-no-lro-success" | "polling-operation-no-lro-failure" | "polling-operation-no-ref-or-link" | "invalid-final-operation" | "invalid-trait-property-count" | "invalid-trait-property-type" | "invalid-trait-context" | "trait-property-without-location" | "expected-trait-missing" | "client-request-id-trait-missing" | "repeatable-requests-trait-missing" | "conditional-requests-trait-missing" | "expected-trait-diagnostic-missing" | "invalid-parameter" | "expected-success-response" | "lro-polling-data-missing-from-operation-response" | "no-object" | "verb-conflict" | "rpc-operation-needs-route" | "union-enums-multiple-kind" | "union-enums-invalid-kind" | "union-enums-circular", M extends keyof {
    "lro-status-union-non-string": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-property-invalid-type": {
        default: string;
    };
    "lro-status-missing": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-monitor-invalid-result-property": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "bad-record-type": {
        extendUnknown: import("@typespec/compiler").CallableMessage<[string, string, string, string]>;
        recordWithProperties: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "request-parameter-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "response-property-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "operation-link-parameter-invalid": {
        default: string;
    };
    "operation-link-parameter-invalid-target": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-resource-type": {
        missingKey: import("@typespec/compiler").CallableMessage<[string]>;
        missingSegment: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "polling-operation-return-model": {
        default: string;
    };
    "polling-operation-no-status-monitor": {
        default: string;
    };
    "polling-operation-no-lro-success": {
        default: string;
    };
    "polling-operation-no-lro-failure": {
        default: string;
    };
    "polling-operation-no-ref-or-link": {
        default: string;
    };
    "invalid-final-operation": {
        default: string;
    };
    "invalid-trait-property-count": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-trait-property-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "invalid-trait-context": {
        default: string;
    };
    "trait-property-without-location": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "client-request-id-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "repeatable-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "conditional-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "expected-trait-diagnostic-missing": {
        default: string;
    };
    "invalid-parameter": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-success-response": {
        default: string;
    };
    "lro-polling-data-missing-from-operation-response": {
        default: string;
    };
    "no-object": {
        default: string;
    };
    "verb-conflict": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "rpc-operation-needs-route": {
        default: string;
    };
    "union-enums-multiple-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-invalid-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-circular": {
        default: string;
    };
}[C]>(diag: import("@typespec/compiler").DiagnosticReport<{
    "lro-status-union-non-string": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-property-invalid-type": {
        default: string;
    };
    "lro-status-missing": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "lro-status-monitor-invalid-result-property": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "bad-record-type": {
        extendUnknown: import("@typespec/compiler").CallableMessage<[string, string, string, string]>;
        recordWithProperties: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "request-parameter-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "response-property-invalid": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "operation-link-parameter-invalid": {
        default: string;
    };
    "operation-link-parameter-invalid-target": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-resource-type": {
        missingKey: import("@typespec/compiler").CallableMessage<[string]>;
        missingSegment: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "polling-operation-return-model": {
        default: string;
    };
    "polling-operation-no-status-monitor": {
        default: string;
    };
    "polling-operation-no-lro-success": {
        default: string;
    };
    "polling-operation-no-lro-failure": {
        default: string;
    };
    "polling-operation-no-ref-or-link": {
        default: string;
    };
    "invalid-final-operation": {
        default: string;
    };
    "invalid-trait-property-count": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "invalid-trait-property-type": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "invalid-trait-context": {
        default: string;
    };
    "trait-property-without-location": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "client-request-id-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "repeatable-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "conditional-requests-trait-missing": {
        default: import("@typespec/compiler").CallableMessage<[]>;
    };
    "expected-trait-diagnostic-missing": {
        default: string;
    };
    "invalid-parameter": {
        default: import("@typespec/compiler").CallableMessage<[string, string]>;
    };
    "expected-success-response": {
        default: string;
    };
    "lro-polling-data-missing-from-operation-response": {
        default: string;
    };
    "no-object": {
        default: string;
    };
    "verb-conflict": {
        default: import("@typespec/compiler").CallableMessage<[string, string, string]>;
    };
    "rpc-operation-needs-route": {
        default: string;
    };
    "union-enums-multiple-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-invalid-kind": {
        default: import("@typespec/compiler").CallableMessage<[string]>;
    };
    "union-enums-circular": {
        default: string;
    };
}, C, M>) => import("@typespec/compiler").Diagnostic, createStateSymbol: (name: string) => symbol;
//# sourceMappingURL=lib.d.ts.map