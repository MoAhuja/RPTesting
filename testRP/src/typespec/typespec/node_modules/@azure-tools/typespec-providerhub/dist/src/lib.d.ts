export declare const libDef: {
    readonly name: "@azure-tools/typespec-providerhub";
    readonly diagnostics: {
        readonly "no-inline-model": {
            readonly severity: "warning";
            readonly messages: {
                readonly default: "Inline models cannot be represented in many languages. Using this pattern can result in bad auto naming. ";
            };
        };
        readonly "documentation-different-with-node-name": {
            readonly severity: "warning";
            readonly messages: {
                readonly default: "The documentation should not be the same as the node name.";
            };
        };
        readonly "no-identifier-property-in-array-item": {
            readonly severity: "warning";
            readonly messages: {
                readonly default: "Missing identifying properties of objects in the array item, please add @extension(\"x-ms-identifiers\", [<prop>]) to specify it. If there are no appropriate identifying properties, please add @extension(\"x-ms-identifiers\",[]).";
            };
        };
        readonly "x-ms-identifiers-invalid-value": {
            readonly severity: "error";
            readonly messages: {
                readonly notArray: import("@typespec/compiler").CallableMessage<["valueType"]>;
                readonly missingProperty: import("@typespec/compiler").CallableMessage<["propertyName", "targetModelName"]>;
            };
        };
        readonly "no-success-response-code": {
            readonly severity: "warning";
            readonly messages: {
                readonly default: "The operation should define a success response code, it should contain at least one of 200, 201 or 202";
            };
        };
        readonly "non-breaking-versioning": {
            readonly severity: "warning";
            readonly messages: {
                readonly default: import("@typespec/compiler").CallableMessage<["action"]>;
                readonly addedRequired: "Adding required property is a breaking change.";
                readonly optionalNoDefault: "Property made optional should have a default value.";
            };
        };
    };
};
export declare const reportDiagnostic: <C extends "no-inline-model" | "documentation-different-with-node-name" | "no-identifier-property-in-array-item" | "x-ms-identifiers-invalid-value" | "no-success-response-code" | "non-breaking-versioning", M extends keyof {
    "no-inline-model": {
        readonly default: "Inline models cannot be represented in many languages. Using this pattern can result in bad auto naming. ";
    };
    "documentation-different-with-node-name": {
        readonly default: "The documentation should not be the same as the node name.";
    };
    "no-identifier-property-in-array-item": {
        readonly default: "Missing identifying properties of objects in the array item, please add @extension(\"x-ms-identifiers\", [<prop>]) to specify it. If there are no appropriate identifying properties, please add @extension(\"x-ms-identifiers\",[]).";
    };
    "x-ms-identifiers-invalid-value": {
        readonly notArray: import("@typespec/compiler").CallableMessage<["valueType"]>;
        readonly missingProperty: import("@typespec/compiler").CallableMessage<["propertyName", "targetModelName"]>;
    };
    "no-success-response-code": {
        readonly default: "The operation should define a success response code, it should contain at least one of 200, 201 or 202";
    };
    "non-breaking-versioning": {
        readonly default: import("@typespec/compiler").CallableMessage<["action"]>;
        readonly addedRequired: "Adding required property is a breaking change.";
        readonly optionalNoDefault: "Property made optional should have a default value.";
    };
}[C]>(program: import("@typespec/compiler").Program, diag: import("@typespec/compiler").DiagnosticReport<{
    "no-inline-model": {
        readonly default: "Inline models cannot be represented in many languages. Using this pattern can result in bad auto naming. ";
    };
    "documentation-different-with-node-name": {
        readonly default: "The documentation should not be the same as the node name.";
    };
    "no-identifier-property-in-array-item": {
        readonly default: "Missing identifying properties of objects in the array item, please add @extension(\"x-ms-identifiers\", [<prop>]) to specify it. If there are no appropriate identifying properties, please add @extension(\"x-ms-identifiers\",[]).";
    };
    "x-ms-identifiers-invalid-value": {
        readonly notArray: import("@typespec/compiler").CallableMessage<["valueType"]>;
        readonly missingProperty: import("@typespec/compiler").CallableMessage<["propertyName", "targetModelName"]>;
    };
    "no-success-response-code": {
        readonly default: "The operation should define a success response code, it should contain at least one of 200, 201 or 202";
    };
    "non-breaking-versioning": {
        readonly default: import("@typespec/compiler").CallableMessage<["action"]>;
        readonly addedRequired: "Adding required property is a breaking change.";
        readonly optionalNoDefault: "Property made optional should have a default value.";
    };
}, C, M>) => void;
//# sourceMappingURL=lib.d.ts.map