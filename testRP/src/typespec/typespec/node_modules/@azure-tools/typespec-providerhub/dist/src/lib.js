import { createTypeSpecLibrary, paramMessage } from "@typespec/compiler";
export const libDef = {
    name: "@azure-tools/typespec-providerhub",
    diagnostics: {
        "no-inline-model": {
            severity: "warning",
            messages: {
                default: "Inline models cannot be represented in many languages. Using this pattern can result in bad auto naming. ",
            },
        },
        "documentation-different-with-node-name": {
            severity: "warning",
            messages: {
                default: "The documentation should not be the same as the node name.",
            },
        },
        "no-identifier-property-in-array-item": {
            severity: "warning",
            messages: {
                default: `Missing identifying properties of objects in the array item, please add @extension("x-ms-identifiers", [<prop>]) to specify it. If there are no appropriate identifying properties, please add @extension("x-ms-identifiers",[]).`,
            },
        },
        "x-ms-identifiers-invalid-value": {
            severity: "error",
            messages: {
                notArray: paramMessage `Value passed to @extension("x-ms-identifiers",...) was a "${"valueType"}". Pass an array of property name.`,
                missingProperty: paramMessage `Property "${"propertyName"}" is not found in "${"targetModelName"}". Make sure value of x-ms-identifiers extension are valid property name of the array element.`,
            },
        },
        "no-success-response-code": {
            severity: "warning",
            messages: {
                default: "The operation should define a success response code, it should contain at least one of 200, 201 or 202",
            },
        },
        "non-breaking-versioning": {
            severity: "warning",
            messages: {
                default: paramMessage `Using ${"action"} is not backward compatible.`,
                addedRequired: "Adding required property is a breaking change.",
                optionalNoDefault: "Property made optional should have a default value.",
            },
        },
    },
};
export const { reportDiagnostic } = createTypeSpecLibrary(libDef);
//# sourceMappingURL=lib.js.map